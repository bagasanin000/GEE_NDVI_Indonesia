/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var title_loc = /* color: #d63000 */ee.Geometry.Point([123.61407823422329, 5.221589006374192]),
    gradientbar_loc = 
    /* color: #98ff00 */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[95.97777472321684, -7.242882047329788],
          [95.97777472321684, -9.48185499152717],
          [104.50316534821684, -9.48185499152717],
          [104.50316534821684, -7.242882047329788]]], null, false),
    title2_loc = /* color: #0b4a8b */ee.Geometry.Point([96.08763800446684, -5.987892151781026]),
    modis = ee.ImageCollection("MODIS/061/MOD13Q1"),
    bound = ee.FeatureCollection("USDOS/LSIB_SIMPLE/2017");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// Import dataset
var col = modis.select('NDVI')

// Set area
var mask = bound.filter(ee.Filter.eq('country_na', 'Indonesia'))

// Set area frame
var region = ee.Geometry.Polygon(
  [[[94.43225969906874, 6.008802618862906],
  [94.43225969906874, -11.308355137614885],
  [141.36585344906874, -11.308355137614885],
  [141.36585344906874, 6.008802618862906]]], 
  null, false)

// Group image
col = col.map(function(img) {
  var doy = ee.Date(img.get('system:time_start')).getRelative('day', 'year')
  return img.set('doy', doy)
})

var distinctDOY = col.filterDate('2018-01-01', '2022-12-31')
var filter = ee.Filter.equals({leftField: 'doy', rightField: 'doy'})
var join = ee.Join.saveAll('doy_matches')
var joinCol = ee.ImageCollection(join.apply(distinctDOY, col, filter))

// Apply median reduction among matching DOY collections
var comp = joinCol.map(function(img) {
  var doyCol = ee.ImageCollection.fromImages(
    img.get('doy_matches')
  );
  return doyCol.reduce(ee.Reducer.median());
});


// Define RGB viz parameters
var visParams = {
  min: 0.0,
  max: 9000.0,
  palette: [
    'FFFFFF', 'CE7E45', 'DF923D', 'F1B555', 'FCD163', '99B718', '74A901',
    '66A000', '529400', '3E8601', '207401', '056201', '004C00', '023B01',
    '012E01', '011D01', '011301'
  ],
};

// Import packages
var text = require('users/gena/packages:text')
var utils = require('users/gena/packages:utils')
var style = require('users/gena/packages:style')

// Create RGB visualization images for use as animation frames.
var rgbVis = comp.map(function(img) {
var textVis = {fontSize: 14, textColor: 'ffffff',
  outlineColor: '000000', outlineWidth: 1.5,
  outlineOpacity: 0.5}
  
  // Title
  var title = 'NDVI Indonesia 5 Tahun Terakhir'
  var scale = 8000
  Map.addLayer(title_loc)
  var title_text = text.draw(title, title_loc, scale, {fontSize: 18})
  
  // Date
  var scale1 = 8000
  var date_loc = text.getLocation(region, 'right', '14%', '13%')
  var date_label = text.draw(img.get('system:index'), date_loc, scale1, textVis)

  // Gradient Bar
  Map.addLayer(gradientbar_loc)
    var labels = ee.List.sequence(0, 1)
    var gradientBar = style.GradientBar.draw(gradientbar_loc,{
                      min: 0, max: 1, palette: visParams.palette, labels: labels,
                      format: '%.0f', text: {fontSize: 14,
                      outlineColor: '000000', outlineWidth: 1.5,
                      outlineOpacity: 0.5}})
      
  // NDVI Label
  var NDVI_label = 'NDVI'
  Map.addLayer(title2_loc)
  var NDVI_text = text.draw(NDVI_label, title2_loc, scale1, {fontSize: 14})
  
return img.visualize(visParams)
  .clip(mask)
  .blend(title_text)
  .blend(date_label)
  .blend(gradientBar)
  .blend(NDVI_text)
})

// Define GIF viz parameters.
var gifParams = {
  'region': region,
  'dimensions': 700,
  'crs': 'EPSG:3857',
  'framesPerSecond': 3
}

// Print the GIF URL to the console.
print(rgbVis.getVideoThumbURL(gifParams))

// Render the GIF animation in the console.
print(ui.Thumbnail(rgbVis, gifParams))



